<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>allowVolumeExpansion</title>
      <link href="/2018/09/10/allowVolumeExpansion/"/>
      <url>/2018/09/10/allowVolumeExpansion/</url>
      <content type="html"><![CDATA[<h1 id="Let-us-expand-kubernetes-volume"><a href="#Let-us-expand-kubernetes-volume" class="headerlink" title="Let us expand kubernetes volume"></a>Let us expand kubernetes volume</h1><p>This article is based on <a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/" target="_blank" rel="noopener">kubernetes docs</a></p><p>In this case, you don’t need to delete and recreate a Pod or deployment that is using an existing PVC. Any in-use PVC automatically becomes available to its Pod as soon as its file system has been expanded. This feature has no effect on PVCs that are not in use by a Pod or deployment. You must create a Pod which uses the PVC before the expansion can complete.</p><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><ul><li>feature support</li><li>volume type </li><li>demo </li></ul><h2 id="feature-support"><a href="#feature-support" class="headerlink" title="feature support"></a>feature support</h2><ul><li>Kubernetes v1.8 alpha</li><li>Kubernetes v1.11 beta</li></ul><h2 id="volume-type"><a href="#volume-type" class="headerlink" title="volume type"></a>volume type</h2><p>you can expand the fllowing types of volumes:</p><ul><li>gcePersistentDisk</li><li>awsElasticBlockStore</li><li>Cinder</li><li>glusterfs</li><li>rbd</li><li>Azure File</li><li>Azure Disk</li><li>Portworx</li></ul><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p>you just add <strong>allowVolumeExpansion</strong> field in your storage class,like this:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">gluster-vol-default</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">kubernetes.io/glusterfs</span></span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line"><span class="attr">  resturl:</span> <span class="string">"http://172.18.161.49:8080"</span></span><br><span class="line"><span class="attr">  restuser:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  secretNamespace:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">  secretName:</span> <span class="string">""</span></span><br><span class="line"><span class="attr">allowVolumeExpansion:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>You can only resize volumes containing a file system if the file system is XFS, Ext3, or Ext4.</p><p>If you don’t know you disk filesystem type, you can use the <strong>parted</strong> command to ensure your disk filesystem type,like this:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[wangdanfeng5@dev-workstation ~]$ sudo parted /dev/sdb</span><br><span class="line">GNU Parted 3.1</span><br><span class="line">Using /dev/sdb</span><br><span class="line">Welcome to GNU Parted! Type <span class="string">'help'</span> to view a list of commands.</span><br><span class="line">(parted) <span class="built_in">print</span> list                                                       </span><br><span class="line">Model: HP LOGICAL VOLUME (scsi)</span><br><span class="line">Disk /dev/sdb: 600GB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: loop</span><br><span class="line">Disk Flags: </span><br><span class="line"></span><br><span class="line">Number  Start  End    Size   File system  Flags</span><br><span class="line"> 1      0.00B  600GB  600GB  xfs</span><br></pre></td></tr></table></figure><p>last step, resize an in-use PersistentVolumeClaim and then enjoy it.</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>istio-introduction</title>
      <link href="/2018/09/06/istio-introduction/"/>
      <url>/2018/09/06/istio-introduction/</url>
      <content type="html"><![CDATA[<h2 id="overview"><a href="#overview" class="headerlink" title="overview"></a>overview</h2><ul><li><a href="#Istio是什么-?">Istio是什么 ?</a></li><li><a href="[#微服务演化到Istio经历了哪些历程">微服务演化到Istio经历了哪些历程</a></li><li><a href="#Istio的基本组件及功能">Istio的基本组件及功能</a></li><li><a href="#我们选择Istio的好处及优势">我们选择Istio的好处及优势</a></li><li><a href="#开发团队">开发团队</a></li></ul><h2 id="Istio是什么-？"><a href="#Istio是什么-？" class="headerlink" title="Istio是什么 ？"></a>Istio是什么 ？</h2><p>Istio是Google/IBM/Lyft联合开发的开源项目，2017年5月发布第一个release 0.1.0， 官方定义为: Istio：一个连接，管理和保护微服务的开放平台。</p><p>Istio是service mesh一种解决方案，在解释什么是Istio之前我们先了解什么是service mesh， 了解了service mesh之后，Istio就有了一个基本的了解：</p><ul><li>什么是service mesh ？</li></ul><h3 id="1-service-mesh是一个十分新的概念和词汇。"><a href="#1-service-mesh是一个十分新的概念和词汇。" class="headerlink" title="1. service mesh是一个十分新的概念和词汇。"></a>1. service mesh是一个十分新的概念和词汇。</h3><p>这个词最早使用由开发Linkerd的Buoyant公司提出，并在内部使用。2016年9月29日第一次公开使用这个术语。2017年的时候随着Linkerd的传入，Service Mesh进入国内技术社区的视野。最早翻译为“服务啮合层”，这个词比较拗口。用了几个月之后改成了服务网格。</p><h3 id="2-一个简单的模型"><a href="#2-一个简单的模型" class="headerlink" title="2. 一个简单的模型"></a>2. 一个简单的模型</h3><p><img src="images/p2-service-mesh.png" alt="service-mesh"><br>描述：Service Mesh的部署模型，先看单个的，对于一个简单请求，作为请求发起者的客户端应用实例，会首先用简单方式将请求发送到本地的Service Mesh实例。这是两个独立进程，他们之间是远程调用。<br>总之，service Mesh会完成完整的服务间调用流程，如服务发现负载均衡，最后将请求发送给目标服务</p><h3 id="3-简单模型的拓展"><a href="#3-简单模型的拓展" class="headerlink" title="3. 简单模型的拓展"></a>3. 简单模型的拓展</h3><p><img src="images/p3-service-mesh.png" alt="service-mesh"><br>描述：多个服务调用的情况，在这个图上我们可以看到Service Mesh在所有的服务的下面，这一层被称之为服务间通讯专用基础设施层。Service Mesh会接管整个网络，把所有的请求在服务之间做转发。在这种情况下，我们会看到上面的服务不再负责传递请求的具体逻辑，只负责完成业务处理。服务间通讯的环节就从应用里面剥离出来，呈现出一个抽象层</p><h3 id="4-再进一步拓展成网络"><a href="#4-再进一步拓展成网络" class="headerlink" title="4. 再进一步拓展成网络"></a>4. 再进一步拓展成网络</h3><p><img src="images/p4-service-mesh.png" alt="service-mesh"></p><h3 id="5-总结什么是service-mesh"><a href="#5-总结什么是service-mesh" class="headerlink" title="5. 总结什么是service mesh"></a>5. 总结什么是service mesh</h3><p><img src="images/p5-service-mesh.png" alt="service-mesh"></p><h2 id="微服务演化到Istio经历了哪些历程？"><a href="#微服务演化到Istio经历了哪些历程？" class="headerlink" title="微服务演化到Istio经历了哪些历程？"></a>微服务演化到Istio经历了哪些历程？</h2><p><a href="istio演化历史.pptx">微服务历史PPT</a></p><h2 id="Istio的基本组件及功能"><a href="#Istio的基本组件及功能" class="headerlink" title="Istio的基本组件及功能"></a>Istio的基本组件及功能</h2><p><img src="images/p13-service-mesh.png" alt="service-mesh"></p><p>Istio 首先是一个服务网络，但是Istio又不仅仅是服务网格: 在 Linkerd， Envoy 这样的典型服务网格之上，Istio提供了一个完整的解决方案，为整个服务网格提供行为洞察和操作控制，以满足微服务应用程序的多样化需求。</p><h3 id="1-Istio服务网格逻辑上分为数据面板和控制面板"><a href="#1-Istio服务网格逻辑上分为数据面板和控制面板" class="headerlink" title="1. Istio服务网格逻辑上分为数据面板和控制面板"></a>1. Istio服务网格逻辑上分为数据面板和控制面板</h3><ul><li><p>数据面板由一组智能代理（Envoy）组成，代理部署为边车，调解和控制微服务之间所有的网络通信。</p></li><li><p>控制面板负责管理和配置代理来路由流量，以及在运行时执行策略。</p><h3 id="2-Istio在服务网络中统一提供了许多关键功能-以下内容来自官方文档-："><a href="#2-Istio在服务网络中统一提供了许多关键功能-以下内容来自官方文档-：" class="headerlink" title="2. Istio在服务网络中统一提供了许多关键功能(以下内容来自官方文档)："></a>2. Istio在服务网络中统一提供了许多关键功能(以下内容来自官方文档)：</h3></li><li><p>流量管理：控制服务之间的流量和API调用的流向，使得调用更可靠，并使网络在恶劣情况下更加健壮。</p></li><li><p>可观察性：了解服务之间的依赖关系，以及它们之间流量的本质和流向，从而提供快速识别问题的能力。</p></li><li><p>策略执行：将组织策略应用于服务之间的互动，确保访问策略得以执行，资源在消费者之间良好分配。策略的更改是通过配置网格而不是修改应用程序代码。</p></li><li><p>服务身份和安全：为网格中的服务提供可验证身份，并提供保护服务流量的能力，使其可以在不同可信度的网络上流转。</p><h2 id="我们选择Istio的好处及优势"><a href="#我们选择Istio的好处及优势" class="headerlink" title="我们选择Istio的好处及优势"></a>我们选择Istio的好处及优势</h2></li><li><p>实际应用部署一起，但对应用透明。对应用服务无侵入<br>Istio 超越 spring cloud和dubbo 等传统开发框架之处， 就在于不仅仅带来了远超这些框架所能提供的功能， 而且也不需要应用程序为此做大量的改动， 开发人员也不必为上面的功能实现进行大量的知识储备。</p></li><li>Istio 大幅降低微服务架构下应用程序的开发难度，势必极大的推动微服务的普及。<br>它可以解放业务开发人员，业务更加专注。Istio将大量的运维策略控制及监控等非业务功能代码抽象出来</li><li>还有很多。。。</li></ul><h2 id="开发团队"><a href="#开发团队" class="headerlink" title="开发团队"></a>开发团队</h2><p><a href="https://github.com/istio/community/blob/master/WORKING-GROUPS.md" target="_blank" rel="noopener">istio work group</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/09/05/hello-world/"/>
      <url>/2018/09/05/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
